{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Agricola Bacatete\\\\comedor-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport './App.css';\nimport logo from './logo.png';\n\n// Configuración de Axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nconst App = () => {\n  _s();\n  const [codigo, setCodigo] = useState('');\n  const [turno, setTurno] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const [error, setError] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [turnoSeleccionado, setTurnoSeleccionado] = useState(false);\n  const [turnoActivo, setTurnoActivo] = useState(false);\n\n  // Cargar registros automáticamente cuando el turno está activo\n  useEffect(() => {\n    let intervalId;\n    if (turnoActivo && turnoSeleccionado) {\n      cargarRegistros();\n      intervalId = setInterval(cargarRegistros, 2000); // Actualiza cada 2 segundos\n    }\n    return () => clearInterval(intervalId);\n  }, [turnoActivo, turnoSeleccionado, turno]);\n  const cargarRegistros = async () => {\n    try {\n      const response = await axios.get('/registros', {\n        params: {\n          turno\n        },\n        timeout: 5000\n      });\n      setRegistros(response.data);\n    } catch (err) {\n      console.error('Error al cargar registros:', err);\n      setError('No se pudieron cargar los registros. Verifica la conexión.');\n      setTimeout(() => setError(''), 5000);\n    }\n  };\n  const registrarEmpleado = async () => {\n    if (!turnoActivo) {\n      setError('El turno no está activo');\n      return setTimeout(() => setError(''), 3000);\n    }\n    if (!codigo.trim()) {\n      setError('Ingrese el código del empleado');\n      return setTimeout(() => setError(''), 3000);\n    }\n    try {\n      const response = await axios.post('/registrar', {\n        codigo,\n        turno\n      });\n      setMensaje(response.data.message);\n      setCodigo('');\n      cargarRegistros(); // Actualizar lista inmediatamente\n      setTimeout(() => setMensaje(''), 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Error al registrar');\n      setTimeout(() => setError(''), 3000);\n    }\n  };\n  const controlTurno = () => {\n    if (!turnoSeleccionado) {\n      setError('Seleccione un turno primero');\n      return setTimeout(() => setError(''), 3000);\n    }\n    setTurnoActivo(!turnoActivo);\n    setMensaje(`Turno ${!turnoActivo ? 'iniciado' : 'finalizado'}`);\n    setTimeout(() => setMensaje(''), 2000);\n  };\n  const exportarExcel = async () => {\n    try {\n      const response = await axios.get('/exportar', {\n        responseType: 'blob',\n        params: {\n          turno\n        }\n      });\n      saveAs(new Blob([response.data]), `registros_${turno}.xlsx`);\n    } catch (err) {\n      setError('Error al exportar datos');\n      setTimeout(() => setError(''), 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo Comedor San Mart\\xEDn\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: process.env.REACT_APP_TITULO\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), !turnoSeleccionado ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seleccion-turno\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Seleccione Turno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: turno,\n        onChange: e => setTurno(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Seleccione --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desayuno\",\n          children: \"Desayuno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"comida\",\n          children: \"Comida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cena\",\n          children: \"Cena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => turno ? setTurnoSeleccionado(true) : setError('Seleccione turno'),\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registro-empleados\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-turno\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: controlTurno,\n          className: turnoActivo ? 'btn-terminar' : 'btn-iniciar',\n          children: turnoActivo ? 'Terminar Turno' : 'Iniciar Turno'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info-turno\",\n          children: [\"Turno: \", turno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registro-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: codigo,\n          onChange: e => setCodigo(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && registrarEmpleado(),\n          placeholder: \"C\\xF3digo del empleado\",\n          disabled: !turnoActivo,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: registrarEmpleado,\n          disabled: !turnoActivo,\n          children: \"Registrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: mensaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lista-registros\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Registros del turno:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), registros.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: registros.map(registro => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"codigo\",\n              children: registro.codigo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hora\",\n              children: registro.hora\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)]\n          }, registro.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sin-registros\",\n          children: turnoActivo ? 'No hay registros aún' : 'Turno inactivo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportarExcel,\n        className: \"btn-exportar\",\n        disabled: !turnoSeleccionado,\n        children: \"Exportar a Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), process.env.REACT_APP_MODO_DEBUG === 'true' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Conectado a: \", axios.defaults.baseURL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ca9FQf5kWjiUnpccF9Rm/gcSHWw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","saveAs","logo","jsxDEV","_jsxDEV","defaults","baseURL","process","env","REACT_APP_API_URL","App","_s","codigo","setCodigo","turno","setTurno","mensaje","setMensaje","error","setError","registros","setRegistros","turnoSeleccionado","setTurnoSeleccionado","turnoActivo","setTurnoActivo","intervalId","cargarRegistros","setInterval","clearInterval","response","get","params","timeout","data","err","console","setTimeout","registrarEmpleado","trim","post","message","_err$response","_err$response$data","controlTurno","exportarExcel","responseType","Blob","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","REACT_APP_TITULO","value","onChange","e","target","onClick","type","onKeyPress","key","placeholder","disabled","autoFocus","length","map","registro","hora","id","REACT_APP_MODO_DEBUG","_c","$RefreshReg$"],"sources":["C:/Users/Agricola Bacatete/comedor-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport './App.css';\nimport logo from './logo.png';\n\n// Configuración de Axios\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\nconst App = () => {\n  const [codigo, setCodigo] = useState('');\n  const [turno, setTurno] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const [error, setError] = useState('');\n  const [registros, setRegistros] = useState([]);\n  const [turnoSeleccionado, setTurnoSeleccionado] = useState(false);\n  const [turnoActivo, setTurnoActivo] = useState(false);\n\n  // Cargar registros automáticamente cuando el turno está activo\n  useEffect(() => {\n    let intervalId;\n    if (turnoActivo && turnoSeleccionado) {\n      cargarRegistros();\n      intervalId = setInterval(cargarRegistros, 2000); // Actualiza cada 2 segundos\n    }\n    return () => clearInterval(intervalId);\n  }, [turnoActivo, turnoSeleccionado, turno]);\n\n  const cargarRegistros = async () => {\n    try {\n      const response = await axios.get('/registros', {\n        params: { turno },\n        timeout: 5000\n      });\n      setRegistros(response.data);\n    } catch (err) {\n      console.error('Error al cargar registros:', err);\n      setError('No se pudieron cargar los registros. Verifica la conexión.');\n      setTimeout(() => setError(''), 5000);\n    }\n  };\n\n  const registrarEmpleado = async () => {\n    if (!turnoActivo) {\n      setError('El turno no está activo');\n      return setTimeout(() => setError(''), 3000);\n    }\n\n    if (!codigo.trim()) {\n      setError('Ingrese el código del empleado');\n      return setTimeout(() => setError(''), 3000);\n    }\n\n    try {\n      const response = await axios.post('/registrar', { codigo, turno });\n      setMensaje(response.data.message);\n      setCodigo('');\n      cargarRegistros(); // Actualizar lista inmediatamente\n      setTimeout(() => setMensaje(''), 2000);\n    } catch (err) {\n      setError(err.response?.data?.error || 'Error al registrar');\n      setTimeout(() => setError(''), 3000);\n    }\n  };\n\n  const controlTurno = () => {\n    if (!turnoSeleccionado) {\n      setError('Seleccione un turno primero');\n      return setTimeout(() => setError(''), 3000);\n    }\n    setTurnoActivo(!turnoActivo);\n    setMensaje(`Turno ${!turnoActivo ? 'iniciado' : 'finalizado'}`);\n    setTimeout(() => setMensaje(''), 2000);\n  };\n\n  const exportarExcel = async () => {\n    try {\n      const response = await axios.get('/exportar', {\n        responseType: 'blob',\n        params: { turno }\n      });\n      saveAs(new Blob([response.data]), `registros_${turno}.xlsx`);\n    } catch (err) {\n      setError('Error al exportar datos');\n      setTimeout(() => setError(''), 3000);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"logo-container\">\n        <img src={logo} alt=\"Logo Comedor San Martín\" className=\"logo\" />\n      </div>\n\n      <h1>{process.env.REACT_APP_TITULO}</h1>\n\n      {!turnoSeleccionado ? (\n        <div className=\"seleccion-turno\">\n          <h2>Seleccione Turno</h2>\n          <select\n            value={turno}\n            onChange={(e) => setTurno(e.target.value)}\n          >\n            <option value=\"\">-- Seleccione --</option>\n            <option value=\"desayuno\">Desayuno</option>\n            <option value=\"comida\">Comida</option>\n            <option value=\"cena\">Cena</option>\n          </select>\n          <button \n            onClick={() => turno ? setTurnoSeleccionado(true) : setError('Seleccione turno')}\n          >\n            Confirmar\n          </button>\n          {error && <p className=\"error\">{error}</p>}\n        </div>\n      ) : (\n        <div className=\"registro-empleados\">\n          <div className=\"control-turno\">\n            <button \n              onClick={controlTurno}\n              className={turnoActivo ? 'btn-terminar' : 'btn-iniciar'}\n            >\n              {turnoActivo ? 'Terminar Turno' : 'Iniciar Turno'}\n            </button>\n            <span className=\"info-turno\">Turno: {turno}</span>\n          </div>\n\n          <div className=\"registro-form\">\n            <input\n              type=\"text\"\n              value={codigo}\n              onChange={(e) => setCodigo(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && registrarEmpleado()}\n              placeholder=\"Código del empleado\"\n              disabled={!turnoActivo}\n              autoFocus\n            />\n            <button \n              onClick={registrarEmpleado}\n              disabled={!turnoActivo}\n            >\n              Registrar\n            </button>\n          </div>\n\n          {mensaje && <p className=\"success\">{mensaje}</p>}\n          {error && <p className=\"error\">{error}</p>}\n\n          <div className=\"lista-registros\">\n            <h3>Registros del turno:</h3>\n            {registros.length > 0 ? (\n              <ul>\n                {registros.map((registro) => (\n                  <li key={registro.id}>\n                    <span className=\"codigo\">{registro.codigo}</span>\n                    <span className=\"hora\">{registro.hora}</span>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p className=\"sin-registros\">\n                {turnoActivo ? 'No hay registros aún' : 'Turno inactivo'}\n              </p>\n            )}\n          </div>\n\n          <button \n            onClick={exportarExcel} \n            className=\"btn-exportar\"\n            disabled={!turnoSeleccionado}\n          >\n            Exportar a Excel\n          </button>\n        </div>\n      )}\n\n      {/* Solo muestra en desarrollo */}\n      {process.env.REACT_APP_MODO_DEBUG === 'true' && (\n        <div className=\"debug-info\">\n          <p>Conectado a: {axios.defaults.baseURL}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}